server:
  port: 8082

spring:
  application:
    name: API-GATEWAY-SERVICE
  cloud:
    loadbalancer:
      cache:
        enabled: true
    discovery:
      enabled: true
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user-service-public
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/login,/api/v1/users/signup
          filters:
            - RewritePath=/api/v1/users/(?<segment>.*), /api/v1/users/${segment}

        - id: user-service-protected
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/**
          filters:
            - AuthenticationFilter

        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/products/**
          filters:
            - AuthenticationFilter


        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - AuthenticationFilter

        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - AuthenticationFilter

        - id: cart-service
          uri: lb://CART-SERVICE
          predicates:
            - Path=/api/v1/carts/**
          filters:
            - AuthenticationFilter

        - id: search-service
          uri: lb://SEARCH-SERVICE
          predicates:
            - Path=/api/v1/search/**
          filters:
            - AuthenticationFilter
        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - AuthenticationFilter

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns:
              - "http://localhost:[*]"
              - "chrome-extension://*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true

  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    hostname: localhost
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

ribbon:
  eureka:
    enabled: true
    ConnectTimeout: 3000
    ReadTimeout: 60000
    MaxAutoRetries: 1
    MaxAutoRetriesNextServer: 1

logging:
  level:
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
    org.springframework.web.reactive: DEBUG

jwt:
  secretkey: JWT_SECRET
  secretval: jxgEQeXHuPq8VdbyYFNkANdudQ53YUn4