spring.application.name=SEARCH-SERVICE
server.port=8081

# Elasticsearch Configuration
spring.elasticsearch.uris=${ELASTICSEARCH_URI}
spring.elasticsearch.connection-timeout=10s
spring.elasticsearch.socket-timeout=2m
#spring.elasticsearch.username=elastic
#spring.elasticsearch.password=

spring.data.elasticsearch.repositories.enabled=true
#
#With https and username, password
#docker run --name es02 --net elastic -p 9200:9200 -it -m 1GB docker.elastic.co/elasticsearch/elasticsearch:8.17.0

#No password and use http
#docker run --name es03 --net elastic -p 9200:9200 -it -m 1GB -e "discovery.type=single-node" -e "xpack.security.enabled=false" docker.elastic.co/elasticsearch/elasticsearch:8.17.0

eureka.client.service-url.defaultZone=${EUREKA_URI}
eureka.instance.ip-address=${EUREKA_INSTANCE_IP_ADDRESS}


# Kafka Configuration
spring.kafka.topic-1=product-to-search-topic-d
spring.kafka.topic-2=product-to-search-topic-cu
spring.kafka.bootstrap-servers=${KAFKA_URI}
spring.kafka.consumer.group-id=product-group
spring.kafka.consumer.auto-offset-reset=earliest

# Add deserializer configurations
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*